<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:DecisionTree.ViewModels"
        xmlns:m="clr-namespace:DecisionTree.Models"
        xmlns:a="clr-namespace:Assisticant;assembly=Assisticant.XAML"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="DecisionTree.MainWindow"
        Title="Decision Tree" Height="350" Width="525"
        >
    <Window.Resources>
        <a:ViewSelector x:Key="ViewSelector"/>
        <DataTemplate DataType="{x:Type m:ChoiceNode}">
            <Viewbox>
                <Canvas Height="10" Width="10">
            		<Rectangle Width="6.042" Height="6.042" Fill="#721616" Canvas.Left="1.979" Canvas.Top="1.979"/>
            	</Canvas>
            </Viewbox>
        </DataTemplate>
        <DataTemplate DataType="{x:Type m:ProbabilityNode}">
            <Viewbox>
                <Canvas Height="10" Width="10">
            		<Ellipse Width="7.624" Height="7.624" Fill="#127912" Canvas.Left="1.188" Canvas.Top="1.188"/>
            	</Canvas>
            </Viewbox>
        </DataTemplate>
        <DataTemplate DataType="{x:Type m:OutcomeNode}">
            <Viewbox>
                <Canvas Height="10.171" Width="7.74">
            		<Path Data="M0.49174139,5.3126628 L8.2310753,10.397055 8.2182412,0.22827089" Fill="#5E0A53" HorizontalAlignment="Left" Height="10.171" Margin="0" Stretch="Fill" VerticalAlignment="Top" Width="7.74"/>
            	</Canvas>
            </Viewbox>
        </DataTemplate>
        <Style x:Key="LabelStyle" TargetType="{x:Type TextBlock}">
        	<Setter Property="FontWeight" Value="Bold"/>
        	<Setter Property="Margin" Value="5,0,0,0"/>
        </Style>
        <Style x:Key="CostStyle" TargetType="{x:Type TextBlock}">
        	<Setter Property="Foreground" Value="#CC0000"/>
        	<Setter Property="Margin" Value="5,0,0,0"/>
        </Style>
        <Style x:Key="WeightStyle" TargetType="{x:Type TextBlock}">
        	<Setter Property="Foreground" Value="#006600"/>
        	<Setter Property="Margin" Value="5,0,0,0"/>
        </Style>
        <Style x:Key="ExpectedValueStyle" TargetType="{x:Type TextBlock}">
        	<Setter Property="Foreground" Value="#000099"/>
        	<Setter Property="Margin" Value="5,0,5,0"/>
        </Style>
        <HierarchicalDataTemplate DataType="{x:Type vm:RootNodeHeader}" ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal">
                <ContentPresenter ContentTemplateSelector="{DynamicResource ViewSelector}" Content="{Binding Node}"/>
                <TextBlock Text="{Binding Label}" Style="{DynamicResource LabelStyle}" />
                <TextBlock x:Name="ExpectedValue" Text="{Binding ExpectedValue}" Style="{DynamicResource ExpectedValueStyle}" />
            </StackPanel>
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True">
                    <Setter TargetName="ExpectedValue" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type vm:OptionNodeHeader}" ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal">
                <ContentPresenter ContentTemplateSelector="{DynamicResource ViewSelector}" Content="{Binding Node}"/>
                <TextBlock Text="{Binding Label}" Style="{DynamicResource LabelStyle}" />
                <TextBlock x:Name="Cost" Text="{Binding Cost}" Style="{DynamicResource CostStyle}" />
                <TextBlock x:Name="ExpectedValue" Text="{Binding ExpectedValue}" Style="{DynamicResource ExpectedValueStyle}" />
            </StackPanel>
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True">
                    <Setter TargetName="Cost" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter TargetName="ExpectedValue" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type vm:ChanceNodeHeader}" ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal">
                <ContentPresenter ContentTemplateSelector="{DynamicResource ViewSelector}" Content="{Binding Node}"/>
                <TextBlock Text="{Binding Label}" Style="{DynamicResource LabelStyle}" />
                <TextBlock x:Name="Weight" Text="{Binding Weight}" Style="{DynamicResource WeightStyle}" />
                <TextBlock x:Name="ExpectedValue" Text="{Binding ExpectedValue}" Style="{DynamicResource ExpectedValueStyle}" />
            </StackPanel>
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True">
                    <Setter TargetName="Weight" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter TargetName="ExpectedValue" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="True" />
        </Style>
    </Window.Resources>
	<Window.DataContext>
		<Binding Path="Main" Source="{StaticResource Locator}"/>
	</Window.DataContext>
	<Grid>
		<TreeView 
			ItemsSource="{Binding Nodes}" 
			ItemTemplateSelector="{DynamicResource ViewSelector}"/>
	</Grid>
</Window>
